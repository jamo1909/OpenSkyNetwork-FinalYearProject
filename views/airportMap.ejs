<!DOCTYPE html>
<html>
<head>
    <title>Map</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.5.1/dist/leaflet.css"/>
    <link rel='stylesheet' href='/stylesheets/map.css'/>
    <link rel='stylesheet' href='/stylesheets/templates/templates.css'/>

</head>
<body>
<% include templates/header.ejs %>
<div id='Map'></div>
<script src="https://unpkg.com/leaflet@1.5.1/dist/leaflet.js"></script>
<script>
    var token = "aa3ebd6aab71743de4b90ba32e545cee0865be78";
    var data =<%- JSON.stringify(jsonData) %>;

    async function airQualityFetch(lat, long) {
        lat = Math.round(lat * 10) / 10;
        long = Math.round(long * 10) / 10;
        const url = "https://api.waqi.info/feed/geo:" + lat + ";" + long + "/?token=" + token + "";
        // console.log(url);
        const response = await fetch(url);
        const quality = await response.json();
        let airQualityData = {
            airQuality: quality.data.aqi,
            airStatus: quality.status
        };
        return 0;
    }

    var x;
    const icon = L.icon;
    var map = L.map(document.getElementById('Map')).setView([48.8583736, 2.2922926], 4);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
    }).addTo(map);
    const airportIcon = L.icon({
        iconUrl: '/images/airport.png',
        iconSize: [15, 15], // size of the icon
        iconAnchor: [0, 0], // point of the icon which will correspond to marker's location
        popupAnchor: [0, 0] // point from which the popup should open relative to the iconAnchor
    });


    // for(x in data) {
    for (var x = 0; x < 1800; x++) {
        var airQualityData = 0;
        // airQualityFetch(data[x].latitude, data[x].longitude)
        L.marker([data[x].latitude, data[x].longitude], {icon: airportIcon}).addTo(map)
            .bindPopup('Name: ' + data[x].name + ' <br>' +
                'City: ' + data[x].city + ' <br> ' +
                'Country: ' + data[x].country + ' <br> ' +
                'Lat: ' + data[x].latitude + ' <br> ' +
                'Long: ' + data[x].longitude + ' <br> ' +
                'altitude: ' + data[x].altitude + 'm <br>' +
                'Air Quality: ' + airQualityData.airQuality + ' <br> ' +
                'Air Status: ' + airQualityData.airStatus)

    }

</script>
<!--<script rel="script" src='/javascripts/api/plottingPlanes.js'></script>-->
</body>

</html>