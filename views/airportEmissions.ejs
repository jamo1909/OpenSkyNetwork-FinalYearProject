<!DOCTYPE html>
<html>
<head>
    <title>Search Aviation</title>
    <link rel='stylesheet' href='/stylesheets/templates/templates.css'/>
    <link rel='stylesheet' href='/stylesheets/search.css'/>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <!--    <script src='../public/javascripts/api/generatePlanePicture.js' type="text/javascript"></script>-->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.5.1/dist/leaflet.css"/>
    <link href="https://unpkg.com/leaflet@1.3.3/dist/leaflet.css" rel="stylesheet"/>
    <link rel='stylesheet' href='/stylesheets/map.css'/>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"
          integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
          crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"
            integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="
            crossorigin=""></script>
</head>
<style>
    body {
        font: 15px "Lucida Grande", Helvetica, Arial, sans-serif;
        color: black;
    }

    .split {
        height: 100%;
        width: 70%;
        position: fixed;
        z-index: 1;
        top: 0;
        overflow-x: hidden;
        padding-top: 0px;
    }

    .splitOne {
        height: 100%;
        width: 30%;
        position: fixed;
        z-index: 1;
        top: 0;
        overflow-x: hidden;
        padding-top: 20px;
    }

    .left {
        margin: 45px 0 0 0;
        left: 0;
        padding: 0;
        background-color: white;
    }

    .right {
        margin: 45px 0 100px 0;
        right: 0;
    }

    .centered {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
    }

    .centered img {
        width: 150px;
        border-radius: 50%;
    }

    .search span {
        font-weight: bold;
    }

    .tab {
        padding-left: 20px;
    }

    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 100%;
        margin: 0;
    }

    td, th {
        border: 1px solid black;
        text-align: left;
        padding: 12px;
    }

    tr:nth-child(even) {
        background-color: #dddddd;
    }
</style>

<body>
<% include templates/header.ejs %>

<div class="splitOne left">
    <div id="planeTitle" style="text-align: center; font-weight: bold; font-size: 20px;"></div>
    <div class="planePicture"
         style="width: 100%; height: 30%; position: relative; border-style: solid; border-width: 2px;"></div>
    <div class="search" style="overflow:auto; border-style: solid; border-width: 2px;">
        <!--        <p><span>Name: </span><span id="name"><%- jsonData[0].name %></span></p>-->
        <!--        <p><span>City: </span><span><%- jsonData[0].city %></span></p>-->
        <!--        <p><span>Country: </span><span><%- jsonData[0].country %></span></p>-->
        <!--        <p><span>Latitude: </span><span><%- jsonData[0].latitude %></span></p>-->
        <!--        <p><span>Longitude: </span><span><%- jsonData[0].longitude %></span></p>-->
        <!--        <p><span>Altitude: </span><span><%- jsonData[0].altitude %></span></p>-->
        <!--        <p><span>Air quality: </span><span>Dublin Airport</span></p>-->
        <!--        <p><span>Air Status: </span><span>Dublin Airport</span></p>-->
        <table id="myTable">
            <tr>
                <td>Name:</td>
                <td></td>
            </tr>
            <tr>
                <td>City:</td>
                <td></td>
            </tr>
            <tr>
                <td>Country:</td>
                <td></td>
            </tr>
            <tr>
                <td>Longitude:</td>
                <td></td>
            </tr>
            <tr>
                <td>Latitude:</td>
                <td></td>
            </tr>
            <tr>
                <td>Altitude:</td>
                <td></td>
            </tr>
            <tr>
                <td>Air Status:</td>
                <td></td>
            </tr>
            <tr>
                <td>Air Quality :</td>
                <td></td>
            </tr>
            <tr>
                <td>Nitrogen Dioxide(NO2):</td>
                <td></td>
            </tr>
            <tr>
                <td>Ozone gas:</td>
                <td></td>
            </tr>
            <tr>
                <td>PM10:</td>
                <td></td>
            </tr>
            <tr>
                <td>PM2.5:</td>
                <td></td>
            </tr>
            <tr>
                <td>Sulfur dioxide(SO2):</td>
                <td></td>
            </tr>
            <tr>
                <td>Sulfur dioxide(SO2):</td>
                <td></td>
            </tr>
        </table>


    </div>
</div>

<div class="split right">
    <div id='Map'></div>
</div>
<!--<% include templates/footer.ejs %>-->
</body>
<script src="https://unpkg.com/leaflet@1.5.1/dist/leaflet.js"></script>
<script>
    var airports =<%- JSON.stringify(jsonData) %>;

    var val = "Belfast International Airport";
    var index = airports.findIndex(function (item, i) {
        return item.name === val
    });
    console.log("index: " + index);

    var paragraph = document.getElementById("planeTitle");
    paragraph.textContent = airports[index].name;

    var table = document.getElementById("myTable");
    var cell2 = table.rows[0].cells[1];
    cell2.innerHTML = airports[index].name;
    var cell2 = table.rows[1].cells[1];
    cell2.innerHTML = airports[index].city;
    var cell2 = table.rows[2].cells[1];
    cell2.innerHTML = airports[index].country;
    var cell2 = table.rows[3].cells[1];
    cell2.innerHTML = airports[index].latitude;
    var cell2 = table.rows[4].cells[1];
    cell2.innerHTML = airports[index].longitude;
    var cell2 = table.rows[5].cells[1];
    cell2.innerHTML = airports[index].altitude;


    //-------------------------------------------
    var keyword = airports[0].name;
    $(document).ready(function () {
        $.getJSON("http://api.flickr.com/services/feeds/photos_public.gne?jsoncallback=?",
            {
                tags: keyword,
                tagmode: "any",
                format: "json"
            },
            function (data) {
                var rnd = Math.floor(Math.random() * data.items.length);
                var image_src = data.items[0]['media']['m'].replace("_m", "_b");
                console.log("image_src");
                $('.planePicture').css('background-image', "url('" + image_src + "')");
                $('.planePicture').css('background-repeat', "no-repeat");
                $('.planePicture').css('background-size', "100% 100%");
            });
    });


    // ---------------------------------------------------------
    var trip = L.layerGroup();
    var token = "aa3ebd6aab71743de4b90ba32e545cee0865be78";

    var originAirport = {
        lat: airports[0].latitude,
        long: airports[0].longitude
    };

    var x;
    const icon = L.icon;
    var mbAttr = 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
        '<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
        'Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
        mbUrl = 'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw';

    var grayscale = L.tileLayer(mbUrl, {id: 'mapbox/light-v9', attribution: mbAttr}),
        streets = L.tileLayer(mbUrl, {id: 'mapbox/streets-v11', attribution: mbAttr});

    var map = L.map('Map', {
        center: [originAirport.lat, originAirport.long],
        zoom: 12,
        layers: [streets, trip]
    });

    const airportIcon = L.icon({
        iconUrl: '/images/airport.png',
        iconSize: [45, 45], // size of the icon
        iconAnchor: [0, 0], // point of the icon which will correspond to marker's location
        popupAnchor: [0, 0] // point from which the popup should open relative to the iconAnchor
    });


    L.marker([originAirport.lat, originAirport.long], {icon: airportIcon}).addTo(trip);

    var baseLayers = {
        "Streets": streets,
        "Grayscale": grayscale

    };

    var overlays = {
        "Trip": trip
    };

    L.control.layers(baseLayers, overlays).addTo(map);


</script>

</html>