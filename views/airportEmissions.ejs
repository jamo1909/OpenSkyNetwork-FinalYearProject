<!DOCTYPE html>
<html>
<head>
    <title>Search Aviation</title>
    <link rel='stylesheet' href='/stylesheets/templates/templates.css'/>
    <link rel='stylesheet' href='/stylesheets/search.css'/>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <!--    <script src='../public/javascripts/api/generatePlanePicture.js' type="text/javascript"></script>-->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.5.1/dist/leaflet.css"/>
    <link href="https://unpkg.com/leaflet@1.3.3/dist/leaflet.css" rel="stylesheet"/>
    <link rel='stylesheet' href='/stylesheets/map.css'/>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"
          integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
          crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"
            integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="
            crossorigin=""></script>
</head>
<style>
    body {
        font: 15px "Lucida Grande", Helvetica, Arial, sans-serif;
        color: black;
    }

    .split {
        height: 100%;
        width: 70%;
        position: fixed;
        z-index: 1;
        top: 0;
        overflow-x: hidden;
        padding-top: 0px;
    }

    .splitOne {
        height: 100%;
        width: 30%;
        position: fixed;
        z-index: 1;
        top: 0;
        overflow-x: hidden;
        padding-top: 20px;
    }

    .left {
        margin: 45px 0 0 0;
        left: 0;
        padding: 0;
        background-color: white;
    }

    .right {
        margin: 45px 0 100px 0;
        right: 0;
    }


    .centered img {
        width: 150px;
        border-radius: 50%;
    }

    .search span {
        font-weight: bold;
    }

    .tab {
        padding-left: 20px;
    }

    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 100%;
        margin: 0;
    }

    td, th {
        border: 1px solid black;
        text-align: left;
        padding: 11px;
        text-align: center;
    }

    tr:nth-child(even) {
        background-color: #dddddd;
    }

    .closebtn {
        position: absolute;
        top: 0;
        right: 25px;
        font-size: 36px;
        margin-left: 50px;
    }
</style>

<body>
<% include templates/header.ejs %>

<div class="splitOne left" id="mySidenav">
    <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
    <div id="planeTitle" style="text-align: center; font-weight: bold; font-size: 20px; padding: 12px"></div>
    <div class="planePicture"
         style="width: 100%; height: 31%; position: relative; border-style: solid; border-width: 2px;"></div>
    <div class="search" style="overflow:auto; border-style: solid; border-width: 2px;">
        <!--        <p><span>Name: </span><span id="name"><%- jsonData[0].name %></span></p>-->
        <!--        <p><span>City: </span><span><%- jsonData[0].city %></span></p>-->
        <!--        <p><span>Country: </span><span><%- jsonData[0].country %></span></p>-->
        <!--        <p><span>Latitude: </span><span><%- jsonData[0].latitude %></span></p>-->
        <!--        <p><span>Longitude: </span><span><%- jsonData[0].longitude %></span></p>-->
        <!--        <p><span>Altitude: </span><span><%- jsonData[0].altitude %></span></p>-->
        <!--        <p><span>Air quality: </span><span>Dublin Airport</span></p>-->
        <!--        <p><span>Air Status: </span><span>Dublin Airport</span></p>-->
        <table id="myTable">
            <tr>
                <td>Name:</td>
                <td></td>
            </tr>
            <tr>
                <td>City:</td>
                <td></td>
            </tr>
            <tr>
                <td>Country:</td>
                <td></td>
            </tr>
            <tr>
                <td>Longitude:</td>
                <td></td>
            </tr>
            <tr>
                <td>Latitude:</td>
                <td></td>
            </tr>
            <tr>
                <td>Altitude:</td>
                <td></td>
            </tr>
            <tr>
                <td>Air Quality :</td>
                <td></td>
            </tr>
            <tr>
                <td>Air Status:</td>
                <td id="aqiColour"></td>
            </tr>
            <tr>
                <td>Nitrogen Dioxide(NO2):</td>
                <td></td>
            </tr>
            <tr>
                <td>Ozone gas:</td>
                <td></td>
            </tr>
            <tr>
                <td>PM10:</td>
                <td></td>
            </tr>
            <tr>
                <td>PM2.5:</td>
                <td></td>
            </tr>
            <tr>
                <td>Sulfur dioxide(SO2):</td>
                <td></td>
            </tr>
            <tr>
                <td>Link:</td>
                <td><a id="airQualityLink">Aqicn Link</a></td>
            </tr>
        </table>


    </div>
</div>

<div class="split right" id="mapDiv">
    <div id='Map'></div>
    <button onclick="openNav()">Close</button>
</div>
<!--<% include templates/footer.ejs %>-->
</body>
<script src="https://unpkg.com/leaflet@1.5.1/dist/leaflet.js"></script>
<script>
    var token = "aa3ebd6aab71743de4b90ba32e545cee0865be78";
    var airports =<%- JSON.stringify(jsonData) %>;

    var val = "London Heathrow Airport";
    var index = airports.findIndex(function (item, i) {
        return item.name === val
    });
    console.log("index: " + index);

    var paragraph = document.getElementById("planeTitle");
    paragraph.textContent = airports[index].name;

    var table = document.getElementById("myTable");
    var cell2 = table.rows[0].cells[1];
    cell2.innerHTML = airports[index].name;
    var cell2 = table.rows[1].cells[1];
    cell2.innerHTML = airports[index].city;
    var cell2 = table.rows[2].cells[1];
    cell2.innerHTML = airports[index].country;
    var cell2 = table.rows[3].cells[1];
    cell2.innerHTML = airports[index].latitude;
    var cell2 = table.rows[4].cells[1];
    cell2.innerHTML = airports[index].longitude;
    var cell2 = table.rows[5].cells[1];
    cell2.innerHTML = airports[index].altitude;


    airQualityFetch(airports[index].latitude, airports[index].longitude);

    async function airQualityFetch(lat, long) {
        lat = Math.round(lat * 10) / 10;
        long = Math.round(long * 10) / 10;
        const url = "https://api.waqi.info/feed/geo:" + lat + ";" + long + "/?token=" + token + "";
        console.log(url);
        const response = await fetch(url);
        const quality = await response.json();
        // var cell2 = table.rows[6].cells[1];
        // cell2.innerHTML = quality.status ;
        var cell2 = table.rows[6].cells[1];
        cell2.innerHTML = quality.data.aqi + " AQI";
        getAirQualityColour(quality.data.aqi);
        var cell2 = table.rows[8].cells[1];
        cell2.innerHTML = quality.data.iaqi.no2.v;
        var cell2 = table.rows[9].cells[1];
        cell2.innerHTML = quality.data.iaqi.o3.v;
        var cell2 = table.rows[10].cells[1];
        cell2.innerHTML = quality.data.iaqi.pm10.v;
        var cell2 = table.rows[11].cells[1];
        cell2.innerHTML = quality.data.iaqi.pm25.v;
        var cell2 = table.rows[12].cells[1];
        cell2.innerHTML = quality.data.iaqi.so2.v;
        var a = document.getElementById('airQualityLink'); //or grab it by tagname etc
        a.href = quality.data.city.url;
        // var cell2 = table.rows[13].cells[1];
        // cell2.innerHTML = quality.data.city.url;
    }

    function getAirQualityColour(airQuality) {
        if (airQuality >= 0 && airQuality < 50) {
            document.getElementById("aqiColour").innerHTML = "Good";
            document.getElementById("aqiColour").style.backgroundColor = '#2E8B57'
        } else if (airQuality >= 50 && airQuality <= 100) {
            document.getElementById("aqiColour").innerHTML = "Moderate";
            document.getElementById("aqiColour").style.backgroundColor = '#FFD700'
        } else if (airQuality > 100 && airQuality <= 150) {
            document.getElementById("aqiColour").innerHTML = "Unhealthy for Sensitive Group";
            document.getElementById("aqiColour").style.backgroundColor = '#FF8C00'
        } else if (airQuality > 150 && airQuality <= 200) {
            document.getElementById("aqiColour").innerHTML = "Unhealthy";
            document.getElementById("aqiColour").style.backgroundColor = '#FF0000'
        } else if (airQuality > 200 && airQuality <= 300) {
            document.getElementById("aqiColour").innerHTML = "Very Unhealthy";
            document.getElementById("aqiColour").style.backgroundColor = '#8A2BE2'
        } else if (airQuality > 300) {
            document.getElementById("aqiColour").innerHTML = "Hazardous";
            document.getElementById("aqiColour").style.backgroundColor = '#8B0000'
        }
    }
    //-------------------------------------------
    var keyword = airports[index].name;
    var API_KEY = '15296087-cbd41a05f8c372ea3ac846dcc';
    var URL = "https://pixabay.com/api/?key=" + API_KEY + "&q=" + encodeURIComponent(airports[index].city) + "&image_type=photo&pretty=true";
    $.getJSON(URL, function (data) {
        if (parseInt(data.totalHits) > 0) {
            $.each(data.hits, function (i, hit) {
                console.log("image_src");
                $('.planePicture').css('background-image', "url('" + hit.largeImageURL + "')");
                $('.planePicture').css('background-repeat', "no-repeat");
                $('.planePicture').css('background-size', "100% 100%");
            });
        } else {
            console.log(airports[index].city);
            var URL = "https://pixabay.com/api/?key=" + API_KEY + "&q=" + encodeURIComponent(airports[index].country) + "&image_type=photo&pretty=true";
            $.getJSON(URL, function (data) {
                if (parseInt(data.totalHits) > 0) {
                    $.each(data.hits, function (i, hit) {
                        console.log(hit.largeImageURL);
                        console.log("image_src");
                        $('.planePicture').css('background-image', "url('" + hit.largeImageURL + "')");
                        $('.planePicture').css('background-repeat', "no-repeat");
                        $('.planePicture').css('background-size', "100% 100%");
                    });
                }
            });
        }
    });



    // ---------------------------------------------------------
    var trip = L.layerGroup();
    var token = "aa3ebd6aab71743de4b90ba32e545cee0865be78";

    var originAirport = {
        lat: airports[index].latitude,
        long: airports[index].longitude
    };

    var x;
    const icon = L.icon;
    var mbAttr = 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
        '<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
        'Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
        mbUrl = 'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw';

    var osm = L.tileLayer("http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"),
        mqi = L.tileLayer("http://{s}.mqcdn.com/tiles/1.0.0/sat/{z}/{x}/{y}.png", {subdomains: ['otile1', 'otile2', 'otile3', 'otile4']});

    var grayscale = L.tileLayer(mbUrl, {id: 'mapbox/light-v9', attribution: mbAttr}),
        streets = L.tileLayer(mbUrl, {id: 'mapbox/streets-v11', attribution: mbAttr});


    var map = L.map('Map', {
        center: [originAirport.lat, originAirport.long],
        zoom: 12,
        layers: [streets, trip]
    });

    const airportIcon = L.icon({
        iconUrl: '/images/airportIcon.png',
        iconSize: [45, 45], // size of the icon
        iconAnchor: [0, 0], // point of the icon which will correspond to marker's location
        popupAnchor: [0, 0] // point from which the popup should open relative to the iconAnchor
    });


    L.marker([originAirport.lat, originAirport.long], {icon: airportIcon}).addTo(trip);

    var baseLayers = {
        "Streets": streets,
        "Grayscale": grayscale,
        "OpenStreetMap": osm,
        "MapQuestImagery": mqi
    };

    var overlays = {
        "Trip": trip
    };

    L.control.layers(baseLayers, overlays).addTo(map);
    //-------------------------------------------------------------
    //
    //     function openNav() {
    //         document.getElementById("mySidenav").style.width = "250px";
    //     }

    function closeNav() {
        document.getElementById("mySidenav").style.width = "0";
        document.getElementById("mapDiv").style.width = "100%";
        document.getElementById("Map").style.width = "100%";
        map._onResize();

    }

    function openNav() {
        document.getElementById("mySidenav").style.width = "30%";
        document.getElementById("mapDiv").style.width = "70%";
        map._onResize();
    }


</script>

</html>